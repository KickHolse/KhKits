# ─────────────────────────────────────────────────── #
#                 ▒███████▒ ███▄    █     ──          #
#                 ▒ ▒ ▒ ▄▀░ ██ ▀█   █                 #
#     ───         ░ ▒ ▄▀▒░ ▓██  ▀█ ██▒                #
#                   ▄▀▒   ░▓██▒  ▐▌██▒                #
#                 ▒███████▒▒██░   ▓██░                #
#                 ░▒▒ ▓░▒░▒░ ▒░   ▒ ▒                 #
#                 ░░▒ ▒ ░ ▒░ ░░   ░ ▒░                #
#                 ░ ░ ░ ░ ░   ░   ░ ░      ───        #
#                   ░ ░             ░                 #
#   ─             ░                                   #
# ─────────────────────────────────────────────────── #
options:
#	Nome: KhKits | Autor: Kiberzn
	version: 10.6

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# events
on join:
	set {_x} to yml value "locations.spawn" from file "plugins/KhKits/locations.yml"
	teleport player to khcore_deserializeLocation({_x})
	file "plugins/KhKits/players/%player%.yml" doesn't exist:
		create file "plugins/KhKits/players/%player%.yml"
		khkits_reset(player)
		set yml value "%uuid of player%.login.first" of file "plugins/KhKits/players/%player%.yml" to "%now%"
	set yml value "%uuid of player%.selected-kit" of file "plugins/KhKits/players/%player%.yml" to "none"
	set yml value "%uuid of player%.login.last" of file "plugins/KhKits/players/%player%.yml" to "%now%"
	set player's gamemode to adventure
	khcore_notifyUpdate(player, "KhKits", "khkits", "67595", "{@version}", "khkits atualizar")
	khcore_roles_setup(player)
	khkits_scoreboard(player)
	khkits_setup(player, "effects")
	khkits_setup(player, "hotbar")
	player has permission "khkits.fly" or "khkits.*":
		set player's fly mode to true
	loop "enabled" and "header" and "footer":
		set {_%loop-value%} to yml value "spawn.tablist.%loop-value%" from file "plugins/KhKits/language.yml"
	{_enabled} == true:
		set tab header to colored {_header} and footer to colored {_footer} for player
	{broadcast.%player%} == true:
		set {_broadcast} to yml value "spawn.broadcast" of file "plugins/KhKits/language.yml"
		set join message to colored getText(player, {_broadcast})
	else:
		set join message to ""
	while player is online:
		set {_level.%player%} to yml value "%uuid of player%.level" from file "plugins/KhKits/players/%player%.yml"
		set level of player to {_level.%player%}
		#make console execute "nte player %player% suffix &6 %{_level.%player%}%"
		wait 1 tick
on quit:
	set quit message to ""
on server list ping:
	loop "enabled" and "header" and "footer":
		set {_%loop-value%} to yml value "spawn.motd.%loop-value%" from file "plugins/KhKits/language.yml"
	{_enabled} == true:
		set motd to "%colored {_header}%%nl%%colored {_footer}%"
on drop:
	event-item != a bowl:
		khkits_checkBuild(player) != true:
			cancel event
	else:
		loop all dropped items:
			wait 2 seconds
			delete loop-value
on right-click on redstone repeater item or redstone comparator item or hopper or daylight sensor or note block or armor stand or flower pot or item frame or trapped chest or ender chest or button or beacon or lever or any door or any anvil or furnaces or any chest or crafting table or enchantment table or brewing stand or bed or dispenser or dropper or any trapdoor or any fence gate:
	khkits_checkBuild(player) != true:
		cancel event
on pickup:
	khkits_checkBuild(player) != true:
		cancel event
on build:
	khkits_checkBuild(player) != true:
		cancel event
on place:
	khkits_checkBuild(player) != true:
		cancel event
on break:
	khkits_checkBuild(player) != true:
		cancel event
on xp spawn:
	cancel event
at 11:01:
	set time to 10:00
on weather change:
	cancel event
on hunger meter change:
	cancel event
on hunger bar change:
	cancel event
on rightclick:
	set {_temp::*} to skutil yaml nodes "spawn.hotbar" from file "plugins/KhKits/language.yml"
	loop {_temp::*}:
		set {_x} to yml value "spawn.hotbar.%loop-value%" from file "plugins/KhKits/language.yml"
		name of player's tool is khcore_getName({_x}):
			cancel event
			set {_cmd} to khcore_getCommand({_x})
			khkits_menu(player, khcore_getCommand({_x}))
	player's tool is a mushroom soup:
		health of player is less than 9.5:
			cancel event
			khkits_soup(player)
on rightclick on entity:
	player's tool is a mushroom soup:
		health of player is less than 9.5:
			cancel event
			khkits_soup(player)
on inventory click:
	khkits_checkKit(player) == "none":
		khkits_checkBuild(player) != true:
			cancel event
on chat:
	cancel event
	set {_format} to yml value "spawn.chat.format" from file "plugins/KhKits/language.yml"
	set {_format} to colored getText(player, "%{_format}%")
	player has permission "khkits.chat.color" or "khkits.*":
		set {_color} to yml value "spawn.chat.color.custom" from file "plugins/KhKits/language.yml"
		replace all "{message}" in {_format} with colored message
	else:
		set {_color} to yml value "spawn.chat.color.default" from file "plugins/KhKits/language.yml"
		replace all "{message}" in {_format} with message
	replace all "{color}" in {_format} with colored {_color}
	broadcast {_format}
on sign change:
	loop "refill" and "recraft":
		line 1 is "[khkits]" or "[khkp]":
			line 2 is loop-value:
				loop 1 and 2 and 3 and 4:
					set line loop-value-2 to colored yaml value "game.signs.%loop-value-1%.line-%loop-value-2%" from "khkits.language"
on rightclick on sign:
	loop "refill" and "recraft":
		loop 1 and 2 and 3 and 4:
			line loop-value-2 of clicked block is colored yaml value "game.signs.%loop-value-1%.line-%loop-value-2%" from "khkits.language"
			#open chest with 3 row named colored {khkp::%loop-value%.title} to player
			#wait 3 tick
			#loop-value == "refill":
			#	set {_soupslot} to 0
			#	loop 27 times:
			#		set slot {_soupslot} of player's current inventory to mushroom stew named colored {khkp::soup}
			#		add 1 to {_soupslot}
			#	stop
			#loop-value == "recraft":
			#	set {_soupslot} to 0
			#	loop 3 times:
			#		loop 9 times:
			#			set slot {_soupslot} of player's current inventory to 64 red mushroom named colored {khkp::red-mushroom}
			#			add 1 to {_soupslot}
			#		loop 9 times:
			#			set slot {_soupslot} of player's current inventory to 64 brown mushroom named colored {khkp::brown-mushroom}
			#			add 1 to {_soupslot}
			#		loop 9 times:
			#			set slot {_soupslot} of player's current inventory to 64 bowl named colored {khkp::bowl}
			#			add 1 to {_soupslot}
on damage of a player:
	loop "messages.level-up" and "messages.death" and "messages.suicide" and "messages.lost-coins" and "messages.earnings-coins" and "rewards.exp-per-kill" and "rewards.coins-per-death" and "rewards.coins-per-kill":
		set {_%loop-value%} to yml value "game.%loop-value%" of file "plugins/KhKits/language.yml"
	replace all "{victim}" with khcore_roles_getColored(victim) in {_messages.suicide} and {_messages.death}
	set {_attacker} to attacker
	damage cause is void:
		cancel event
		invoke "respawn" from victim and attacker
	attacker is a player:
		set {lasthit.%victim%} to {_attacker}
		khkits_checkKit(attacker) == "none"
		cancel event
	khkits_checkKit(victim) == "none":
		cancel event
	else:
		khcore_blood(victim)
	attacker != victim:
		projectile is arrow
		victim is not dead
		khkits_checkKit(victim) != "none"
		set {_bow-hit} to yml value "game.messages.bow-hit" of file "plugins/KhKits/language.yml"
		replace all "{victim}" with khcore_roles_getColored(victim) in {_bow-hit}
		replace all "{life}" with "%victim's health%" in {_bow-hit}
		send colored {_bow-hit} to attacker
	if damage is greater than or equal to health of victim:
		khkits_checkKit(victim) != "none"
		loop "deaths" and "killstreak":
			set {_%loop-value%.%victim%} to yml value "%uuid of victim%.%loop-value%" of file "plugins/KhKits/players/%victim%.yml"
			{_killstreak.%victim%} > 0:
				send "&cVocê perdeu um kill streak de %{_killstreak.%victim%} - 1%" to victim
			add 1 to {_%loop-value%.%victim%}
			set {_killstreak.%victim%} to 0
			set yml value "%uuid of victim%.%loop-value%" of file "plugins/KhKits/players/%victim%.yml" to {_%loop-value%.%victim%}
		khkits_checkKit(victim) != "lava-challenge":
			khkits_coinsmanager(victim, "remove", {_rewards.coins-per-death})
			replace "{coins}" with "%{_rewards.coins-per-death}%" in {_messages.lost-coins}
			set action bar of victim to colored {_messages.lost-coins}
		cancel event
		create a fake explosion at the victim		
		invoke "respawn" from victim and {lasthit.%victim%}
		{lasthit.%victim%} is a player:
			add {_rewards.exp-per-kill} to {players::xp.%{lasthit.%victim%}%}
			{players::xp.%{lasthit.%victim%}%} >= {players::need.%{lasthit.%victim%}%}:
				set {_level.%{lasthit.%victim%}%} to yml value "%uuid of {lasthit.%victim%}%.level" of file "plugins/KhKits/players/%{lasthit.%victim%}%.yml"
				add 1 to {_level.%{lasthit.%victim%}%}
				set yml value "%uuid of {lasthit.%victim%}%.level" of file "plugins/KhKits/players/%{lasthit.%victim%}%.yml" to {_level.%{lasthit.%victim%}%}
				set {players::need.%{lasthit.%victim%}%} to {players::need.%{lasthit.%victim%}%}*1.8
				replace all "\n" in {_messages.level-up} with newline
				replace all "{level}" in {_messages.level-up} with "%{_level.%{lasthit.%victim%}%}%"
				replace all "{reward}" in {_messages.level-up} with "%{players::reward.%{lasthit.%victim%}%}%"
				khkits_coinsmanager({lasthit.%victim%}, "add", {players::reward.%{lasthit.%victim%}%})
				send colored {_messages.level-up} to {lasthit.%victim%}
				set {players::reward.%{lasthit.%victim%}%} to {players::reward.%{lasthit.%victim%}%}+100
				khcore_playSound({lasthit.%victim%}, LEVEL_UP, 1, 15)
			loop "kills" and "killstreak":
				set {_%loop-value%.%{lasthit.%victim%}%} to yml value "%uuid of {lasthit.%victim%}%.%loop-value%" of file "plugins/KhKits/players/%{lasthit.%victim%}%.yml"
				add 1 to {_%loop-value%.%{lasthit.%victim%}%}
				set yml value "%uuid of {lasthit.%victim%}%.%loop-value%" of file "plugins/KhKits/players/%{lasthit.%victim%}%.yml" to {_%loop-value%.%{lasthit.%victim%}%}
			replace all "{attacker}" with  khcore_roles_getColored({lasthit.%victim%}) in {_messages.death}
			khkits_coinsmanager({lasthit.%victim%}, "add", {_rewards.coins-per-kill})
			replace "{coins}" with "%{_rewards.coins-per-kill}%" in {_messages.earnings-coins}
			replace "{exp}" with "%{_rewards.exp-per-kill}%" in {_messages.earnings-coins}
			set action bar of {lasthit.%victim%} to colored {_messages.earnings-coins}
			broadcast colored {_messages.death}
		else:
			broadcast colored {_messages.suicide}
	delete {lasthit.%victim%}

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# command
on command:
	command is "spawn" or "fps" or "knockback" or "lava-challenge":
		cancel event
		set player's gamemode to adventure
		set {_x} to yml value "locations.%command%" from file "plugins/KhKits/locations.yml"
		{_x} == "null":
			send "&cEsta warp não foi configurada corretamente!"
			stop
		khkits_setup(player, "effects")
		set player's fly mode to false
		teleport player to khcore_deserializeLocation({_x})
		command is "spawn":
			khkits_setup(player, "hotbar")
			set yml value "%uuid of player%.selected-kit" of file "plugins/KhKits/players/%player%.yml" to "none"
			player has permission "khkits.fly" or "khkits.*":
				set player's fly mode to true
		else:
			khkits_setup(player, "soup")
			set yml value "%uuid of player%.selected-kit" of file "plugins/KhKits/players/%player%.yml" to command
			set {_items::*} to skutil yaml nodes "warps.%command%.items" from file "plugins/KhKits/menus/warps.yml"
			loop {_items::*}:
				set {_x} to yml value "warps.%command%.items.%loop-value%" from file "plugins/KhKits/menus/warps.yml"
				set {_item} to khcore_getItem({_x})
				set slot khcore_getSlot({_x}) of player to {_item} named khcore_getName({_x})
			set {_armor::*} to skutil yaml nodes "warps.%command%.armor" from file "plugins/KhKits/menus/warps.yml"
			loop {_armor::*}:
				set {_x} to yml value "warps.%command%.armor.%loop-value%" from file "plugins/KhKits/menus/warps.yml"
				set {_item} to khcore_getItem({_x})
				{_x} contains "color>":
					set {_item} to {_item} dyed khcore_getColor({_x})
				#{_x} contains "HEAD:":
				#	set helmet of player to skull of {_p}
				#else:
				equip player with {_item} named khcore_getName({_x})
command /khkits [<text = help>] [<text>] [<text>] [<text>]:
	permission: khkits.*
	permission message: §3[KhKits] §7v{@version} §f- §7Criado por §6Kiberzn§7.
	trigger:
		arg 1 == "help":
			send "%nl%  &eAjuda - KhKits &71/1%nl% "
			send "&3 /khkits atualizar &f- &7Atualiza o skript"
			send "&3 /khkits build &f- &7Alterna o modo construtor"
			send "&3 /khkits coins &f- &7Administra os coins de um jogador"
			send "&3 /khkits reset &f- &7Reseta as estatísticas de um player"
			send "&3 /khkits warps &f- &7Define as warps%nl% "
		arg 1 == "warps":
			arg 2 != "spawn" or "fps" or "lava-challenge" or "knockback":
				send "%nl%  &eAjuda - Warps 1/1%nl% "
				send "&3 /khkits warps spawn&f - &7Define o spawn"
				send "&3 /khkits warps fps&f - &7Define a warp fps"
				send "&3 /khkits warps lava-challenge&f - &7Define a warp lava-challenge"
				send "&3 /khkits warps knockback &f- &7Define a warp knockback%nl% "
			loop "spawn" and "fps" and "lava-challenge" and "knockback":
				arg 2 == loop-value
				set yml value "locations.%loop-value%" of file "plugins/KhKits/locations.yml" to khcore_serializeLocation(player's location)
				set action bar of player to "&aO &l%loop-value% &afoi definido com sucesso"
		arg 1 == "atualizar":
			khcore_update(player, "%{khkp::check_update}%", "KhKits", script)
		arg 1 == "reset":
			arg 2 is set:
				set {arg-2} to arg 2 parsed as offlineplayer
				file "plugins/KhKits/players/%{arg-2}%.yml" exists:
					khkits_reset({arg-2})
					set {arg-2} to khcore_roles_getColored({arg-2})
					send "&aVocê resetou as estatísticas de %{arg-2}%"
				else:
					send "&cNão existe nenhum jogador com este nick em nosso banco de dados."
			else:
				send "&cUtilize /khkits reset <jogador>"
		arg 1 == "build":
			set {_build.%player%} to yml value "%uuid of player%.build" of file "plugins/KhKits/players/%player%.yml"
			loop "enabled" and "disabled":
				set {_%loop-value%} to yml value "game.messages.build.%loop-value%" of file "plugins/KhKits/language.yml"
			{_build.%player%} != true:
				set yml value "%uuid of player%.build" of file "plugins/KhKits/players/%player%.yml" to true
				set action bar of player to colored {_enabled}
				set player's gamemode to creative
			else:
				set yml value "%uuid of player%.build" of file "plugins/KhKits/players/%player%.yml" to false
				set player's gamemode to adventure
				set action bar of player to colored {_disabled}
				player has permission "khkits.fly" or "khkits.*":
					set {_kit-sel.%player%} to yml value "%uuid of player%.selected-kit" of file "plugins/KhKits/players/%player%.yml"
					{_kit-sel.%player%} == "none":
						set player's fly mode to true
		arg 1 == "coins":
			arg 2 != "add" or "remove" or "set":
				send "%nl%  &eAjuda - Coins 1/1%nl% "
				send "&3 /khkits coins add&f - &7Adiciona coins"
				send "&3 /khkits coins remove&f - &7Remove coins"
				send "&3 /khkits coins set &f- &7Seta coins%nl% "
			arg 2 == "add":
				arg 3 is set:
					arg 4 is set:
						set {_p} to arg 3 parsed as offlineplayer
						set {_n} to arg 4 parsed as int
						"%{_n}%" contains "none" or "-":
							send "&cUtilize apenas números positivos para isso."
						else:
							khkits_coinsmanager({_p}, "add", {_n})
							set {_n} to formatNumber({_n})
							set {_p} to khcore_roles_getColored({_p})
							send "&aVocê adicionou &6%{_n}% moedas&a para %{_p}%&a." to player
					else:
						send "&cUtilize: /khkits coins add <jogador> <número>"
				else:
					send "&cUtilize: /khkits coins add <jogador> <número>"
			arg 2 == "remove":
				arg 3 is set:
					arg 4 is set:
						set {_p} to arg 3 parsed as offlineplayer
						set {_n} to arg 4 parsed as int
						"%{_n}%" contains "none" or "-":
							send "&cUtilize apenas números positivos para isso."
						else:
							khkits_coinsmanager({_p}, "remove", {_n})
							set {_n} to formatNumber({_n})
							set {_p} to khcore_roles_getColored({_p})
							send "&cVocê removeu &6%{_n}% moedas&c de %{_p}%&c." to player
					else:
						send "&cUtilize: /khkits coins remove <jogador> <número>"
				else:
					send "&cUtilize: /khkits coins remove <jogador> <número>"
			arg 2 == "set":
				arg 3 is set:
					arg 4 is set:
						set {_p} to arg 3 parsed as offlineplayer
						set {_n} to arg 4 parsed as int
						"%{_n}%" contains "none" or "-":
							send "&cUtilize apenas números positivos para isso."
						else:
							khkits_coinsmanager({_p}, "set", {_n})
							set {_n} to formatNumber({_n})
							set {_p} to khcore_roles_getColored({_p})
							send "&aVocê setou as moedas de %{_p}%&a para &6%{_n}%&a." to player
					else:
						send "&cUtilize: /khkits coins set <jogador> <número>"
				else:
					send "&cUtilize: /khkits coins set <jogador> <número>"
command /stats [<offlineplayer>]:
	trigger:
		arg 1 is set:
			player has permission "khkits.stats" or "khkits.*":
				arg 1 != player:
					khkits_getStats(player, offlineplayer-arg)
				else:
					khkits_getStats(player, player)
		else:
			khkits_getStats(player, player)

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# file manager
function khkits_filemanager(use: text):
	{_use} == "value":
		loop currently loaded yaml files:
			loop-value contains "khkits.menus/stats" or "khkits.menus/shop_kits" or "khkits.menus/shop" or "khkits.kits" or "khkits.language" or "khkits.menus/warps"
			unload yaml loop-value-1
		loop "kits" and "language" and "menus/warps" and "menus/shop" and "menus/shop_kits" and "menus/stats":
			load yaml "plugins/KhKits/%loop-value%.yml" as "khkits.%loop-value%"
		set {score.title} to yaml value "scoreboard.title" from file "plugins/KhKits/language.yml"
		set {_temp::*} to yaml list "scoreboard.lines" from file "plugins/KhKits/language.yml"
		set {scoreline} to 0
		set {_empty} to 0
		delete {score.line::*}
		set {_line} to amount of {_temp::*}
		loop {_temp::*}:
			add 1 to {scoreline}
			"%loop-value%" == "":
				set {score.line::%{_line}%} to "§%{_empty}%"
				{_empty} < 9:
					add 1 to {_empty}
			else:
				set {score.line::%{_line}%} to colored loop-value
			remove 1 from {_line}
	{_use} == "create":
		loop "kits" and "language" and "menus/shop" and "menus/warps" and "menus/shop_kits" and "menus/stats":
			khcore_downGithub("KhKits/%loop-value%.yml", "https://raw.githubusercontent.com/KickHolse/KhKits/master/files/%loop-value%")
		file "plugins/KhKits/locations.yml" doesn't exist:
			create file "plugins/KhKits/locations.yml"
			loop "lava-challenge" and "knockback" and "fps" and "spawn":
				set yml value "locations.%loop-value%" of file "plugins/KhKits/locations.yml" to "null"
		khkits_filemanager("value")
		
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# functions and sub
sub "respawn":
	set {_p} to parameter 1
	set {_p2} to parameter 2
	set {_p}'s gamemode to adventure
	khkits_setup({_p}, "effects")
	loop "fps" and "knockback" and "knockback" and "lava-challenge":
		khkits_checkKit({_p}) == loop-value:
			make {_p} execute "%loop-value%"
			stop
	khkits_setup({_p}, "hotbar")
	set {_x} to yml value "locations.spawn" from file "plugins/KhKits/locations.yml"
	teleport {_p} to khcore_deserializeLocation({_x})
	set yml value "%uuid of {_p}%.selected-kit" of file "plugins/KhKits/players/%{_p}%.yml" to "none"
	{_p} has permission "khkits.fly" or "khkits.*":
		set {_p}'s fly mode to true
function khkits_coinsmanager(p: player, type: text, gold: number) :: boolean:
	set {_coins.%{_p}%} to yml value "%uuid of {_p}%.coins" of file "plugins/KhKits/players/%{_p}%.yml"
	set {_uuid} to uuid of {_p}
	{_type} == "add":
		set {_adicionar} to {_coins.%{_p}%} parsed as int
		add {_gold} to {_adicionar}
		{_adicionar} < 99999999999:
			add {_gold} to {_coins.%{_p}%}
			set yml value "%{_uuid}%.coins" of file "plugins/KhKits/players/%{_p}%.yml" to {_coins.%{_p}%}
	{_type} == "remove":
		{_coins.%{_p}%} >= {_gold}:
			remove {_gold} from {_coins.%{_p}%}
		else:
			set {_coins.%{_p}%} to 0
		set yml value "%{_uuid}%.coins" of file "plugins/KhKits/players/%{_p}%.yml" to {_coins.%{_p}%}
	{_type} == "set":
		set {_coins.%{_p}%} to {_gold}
		set yml value "%{_uuid}%.coins" of file "plugins/KhKits/players/%{_p}%.yml" to {_coins.%{_p}%}
function khkits_soup(p: player):
	set {_life} to 2.1 or 2.2 or 2.3 or 2.4 or 2.5 or 2.6 or 2.7 or 2.8 or 2.9 or 3.1 or 3.2 or 3.3 or 3.4 or 3.5 or 3.6 or 3.7 or 3.8 or 3.9
	set action bar of {_p} to "&7+%{_life}% &4&l❤"
	set the health of {_p} to the health of {_p} + {_life}
	set {_slot} to selected hotbar slot of {_p}
	khkits_checkKit({_p}) != "quickdropper":
		set {_bowl} to yaml value "game.items.bowl" from file "plugins/KhKits/language.yml"
		set slot {_slot} of {_p} to bowl named khcore_getName({_bowl}) with lore khcore_getLore({_bowl})
	else:
		set slot {_slot} of {_p} to air
		drop bowl at {_p}
		khcore_playSound({_p}, ITEM_PICKUP, 1, 15)
	khcore_playSound({_p}, BURP, 1, 5)
function khkits_setup(p: player, event: text):
	{_event} == "effects":
		delete {espinhos.%{_p}%} and {ninja-time.%{_p}%} and {ninja-victim.%{_p}%} and {ninja.%{_p}%}
		set yml value "%uuid of {_p}%.build" of file "plugins/KhKits/players/%{_p}%.yml" to false
		set {_p}'s max health to 10
		heal {_p}
		extinguish {_p}
		set {_p}'s food to 10
		clear {_p}'s inventory
		milk {_p}
	{_event} == "soup":
		loop "soup" and "red_mushroom" and "brown_mushroom" and "bowl":
			set {_%loop-value%} to yaml value "game.items.%loop-value%" from file "plugins/KhKits/language.yml"
		give {_p} 36 soup named khcore_getName({_soup}) with lore khcore_getLore({_soup})
		set slot 13 of {_p} to 64 red mushroom named khcore_getName({_red_mushroom}) with lore khcore_getLore({_red_mushroom})
		set slot 14 of {_p} to 64 brown mushroom named khcore_getName({_brown_mushroom}) with lore khcore_getLore({_brown_mushroom})
		set slot 15 of {_p} to 64 bowl named khcore_getName({_bowl}) with lore khcore_getLore({_bowl})
	{_event} == "hotbar":
		set {_temp::*} to skutil yaml nodes "spawn.hotbar" from file "plugins/KhKits/language.yml"
		loop {_temp::*}:
			set {_x} to yml value "spawn.hotbar.%loop-value%" from file "plugins/KhKits/language.yml"
			replace all "{player}" in {_x} with {_p}'s displayname
			set {_item} to khcore_getItem({_x})
			set slot khcore_getSlot({_x}) of {_p} to {_item} named khcore_getName({_x}) with lore khcore_getLore({_x})
function khkits_scoreboard(p: player):
	delete stylish scoreboard "SCORE-%{_p}%"
	create new stylish scoreboard named "SCORE-%{_p}%"
	set {_line} to 1
	loop {scoreline} times:
		create a new id based score "SCORE-%{_p}%Slot%{_line}%" with text "&%{_line}%" slot {_line} for stylish scoreboard "SCORE-%{_p}%"
		add 1 to {_line}
	khkits_scroller({_p})
	while {_p} is online:
		set stylish scoreboard of {_p} to "SCORE-%{_p}%"
		set {_line} to 1
		loop {scoreline} times:
			set the text of id "SCORE-%{_p}%Slot%{_line}%" to getText({_p}, "%{score.line::%{_line}%}%")
			add 1 to {_line}
		wait 1 seconds
function khkits_scroller(p: player):
	{antitick} == true:
		while {_p} is online:
			loop yaml list "scoreboard.titles" from file "plugins/KhKits/language.yml":
				set title of stylish scoreboard "SCORE-%{_p}%" to getText({_p}, colored "%loop-value%")
				set {_x} to yaml value "scoreboard.update-time" from file "plugins/KhKits/language.yml"
				wait "%{_x}% ticks" parsed as timespan
function getText(p: player, var: text) :: text:
	loop "selected-kit" and "coins" and "deaths" and "kills" and "killstreak" and "level":
		set {_%loop-value%.%{_p}%} to yml value "%uuid of {_p}%.%loop-value%" of file "plugins/KhKits/players/%{_p}%.yml"
	loop "killstreak" and "coins" and "deaths" and "kills" and "level":
		set {_%loop-value%.%{_p}%} to formatNumber({_%loop-value%.%{_p}%})
		replace all "{%loop-value%}" in {_var} with "%{_%loop-value%.%{_p}%}%"
	replace all "{now}" in {_var} with "%now%"
	replace all "{group}" in {_var} with khcore_roles_getColoredGroup({_p})
	replace all "{name}" and "{player}" in {_var} with khcore_roles_getColored({_p})
	replace all "{prefix}" in {_var} with khcore_roles_getPrefix({_p})
	replace all "{online}" in {_var} with "%number of all players%"
	replace all "{display}" in {_var} with khcore_roles_getPrefixed({_p})
	{_selected-kit.%{_p}%} != "none":
		loop "fps" and "lava-challenge" and "knockback":
			{_selected-kit.%{_p}%} == loop-value:
				replace all "{kit}" in {_var} with yaml value "warps.%loop-value%.name" from "khkits.menus/warps"
			else:
				replace all "{kit}" in {_var} with yaml value "kits.%{_selected-kit.%{_p}%}%.name" from "khkits.kits"
	replace all "{kit}" in {_var} with yaml value "game.selected-kits.none" from "khkits.language"
	return "%{_var}%"
function khkits_reset(p: player):
	set yml value "%uuid of {_p}%.name" of file "plugins/KhKits/players/%{_p}%.yml" to {_p}'s displayname
	set yml value "%uuid of {_p}%.selected-kit" of file "plugins/KhKits/players/%{_p}%.yml" to "none"
	loop "killstreak" and "kills" and "deaths" and "coins":
		set yml value "%uuid of {_p}%.%loop-value%" of file "plugins/KhKits/players/%{_p}%.yml" to 0
	set yml value "%uuid of {_p}%.level" of file "plugins/KhKits/players/%{_p}%.yml" to 1
	set yml value "%uuid of {_p}%.build" of file "plugins/KhKits/players/%{_p}%.yml" to false
	#delete yaml list "%uuid of {_p}%.kits" from file "plugins/KhKits/players/%{_p}%.yml"
	add "default" to yaml list "%uuid of {_p}%.kits" from file "plugins/KhKits/players/%{_p}%.yml"
	set {players::xp.%{_p}%} to 0
	set {players::need.%{_p}%} to 100
	set {players::reward.%{_p}%} to 500
function khkits_getStats(p: player, arg: offlineplayer):
	{_arg} is online:
		set {_name} to yaml value "menu.title" from "khkits.menus/stats"
		replace all "{player}" with {_arg}'s displayname in {_name}
		open chest inventory with yaml value "menu.rows" from "khkits.menus/stats" rows named colored {_name} to {_p}
		khcore_playSound({_p}, CLICK, 1, 15)
		wait a tick
		loop "killstreak" and "login.first" and "login.last" and "level" and "kills" and "deaths" and "coins":
			set {_%loop-value%.%{_arg}%} to yml value "%uuid of {_arg}%.%loop-value%" of file "plugins/KhKits/players/%{_arg}%.yml"
		loop "killstreak" and "level" and "kills" and "deaths" and "coins":
			set {_%loop-value%.%{_arg}%} to formatNumber({_%loop-value%.%{_arg}%})
		loop "xp" and "need" and "reward":
			set {players::s.%loop-value%.%{_arg}%} to formatNumber({players::%loop-value%.%{_arg}%})
		set {_temp::*} to skutil yaml nodes "menu.items" from file "plugins/KhKits/menus/stats.yml"
		loop {_temp::*}:
			set {_x} to yml value "menu.items.%loop-value%" from file "plugins/KhKits/menus/stats.yml"
			set {_name} to khcore_getName({_x})
			set {_lore} to khcore_getLore({_x})
			loop "killstreak" and "login.first" and "login.last" and "level" and "kills" and "deaths" and "coins":
				replace all "{%loop-value-2%}" in {_lore} with "%{_%loop-value-2%.%{_arg}%}%"
			loop "xp" and "need" and "reward":
				replace all "{%loop-value-2%}" in {_lore} with "%{players::%loop-value-2%.%{_arg}%}%"
			replace "{player}" in {_x} with "%{_arg}%"
			replace "{colored}" in {_name} with khcore_roles_getColored({_arg})
			set {_item} to khcore_getItem({_x})
			make a gui slot khcore_getSlot({_x}) of {_p} with {_item} named {_name} with lore colored {_lore} to run:
				khcore_playSound({_p}, ITEM_PICKUP, 1, 15)
	else:
		send "&cEste jogador não está online no momento!" to {_p}
import:
    java.text.DecimalFormat
    java.text.DecimalFormatSymbols
expression %number% with decimal format %string%:
    return type: string
    get:
        return (new DecimalFormat(expr-2)).format(expr-1)
function formatNumber(var: number) :: text:
    set {_x} to {_var} with decimal format "######,######"
    return "%{_x}%"
function khkits_buyKit(p: player, kit: text):
	set {_coins.%{_p}%} to yml value "%uuid of {_p}%.coins" of file "plugins/KhKits/players/%{_p}%.yml"
	set {_buykit} to yml value "game.messages.kit.buy" from file "plugins/KhKits/language.yml"
	yaml nodes "kits.%{_kit}%" from file "plugins/KhKits/kits.yml" exists:
		set {_y::*} to yaml list "%uuid of {_p}%.kits" from file "plugins/KhKits/players/%{_p}%.yml"
		{_y::*} contains "%{_kit}%":
			send "&cVocê já possui este kit" to {_p}
		else:
			{_coins.%{_p}%} is greater or equal to yaml value "kits.%{_kit}%.price" from "khkits.kits":
				khcore_playSound({_p}, ITEM_PICKUP, 1, 15)
				add "%{_kit}%" to yaml list "%uuid of {_p}%.kits" from file "plugins/KhKits/players/%{_p}%.yml"
				set {_n} to yaml value "kits.%{_kit}%.price" from "khkits.kits"
				khkits_coinsmanager({_p}, "remove", {_n})
				replace all "{kit}" in {_buykit} with yaml value "kits.%{_kit}%.name" from "khkits.kits"
				send colored {khkp::buy-kit} to {_p}
			else:
				send "&cVocê não tem moedas o suficiente." to {_p}
	else:
		send "&cEste kit não existe" to {_p}
function khkits_menu(p: player, type: text):
	{_type} == "moneyday":
		khcore_playSound({_p}, CLICK, 1, 15)
		set {_wait} to difference between {%{_p}%.moneyday} and now
		if {_wait} is less than 86400 seconds:
			set {_tempo} to "%difference between 86400 seconds and {_wait}%"
			set {_delay} to yml value "game.messages.delay" of file "plugins/KhKits/language.yml"
			replace all "and" with "e" in {_tempo}
			replace all " hours" and " hour" with "h" in {_tempo}
			replace all " minutes" and " minute" with "m" in {_tempo}
			replace all " seconds" and " second" with "s" in {_tempo}
			replace all "{time}" with {_tempo} in {_delay}
			set action bar of {_p} to colored {_delay}
		else:
			set {%{_p}%.moneyday} to now
			set {_x} to yml value "game.messages.daily-coins.coins" of file "plugins/KhKits/language.yml"
			set {_coins} to formatNumber({_x})
			set {_msg} to yml value "game.messages.daily-coins.sucess" of file "plugins/KhKits/language.yml"
			replace all "{coins}" with {_coins} in {_msg}
			send colored {_msg} to {_p}
			khkits_coinsmanager({_p}, "add", {_x})
	{_type} == "warps":
		khcore_playSound({_p}, CLICK, 1, 15)
		loop all players:
			set {_kit-sel.%loop-player%} to yml value "%uuid of loop-player%.selected-kit" of file "plugins/KhKits/players/%loop-player%.yml"
			loop "fps" and "knockback" and "lava-challenge":
				set {_%loop-value-2%o} to number of all players
				{_kit-sel.%loop-player%} != loop-value-2:
					remove 1 from {_%loop-value-2%o}
		open chest inventory with yaml value "menu.rows" from "khkits.menus/warps" rows named yaml value "menu.title" from "khkits.menus/warps" to {_p}
		wait a tick
		set {_temp::*} to skutil yaml nodes "menu.items" from file "plugins/KhKits/menus/warps.yml"
		loop {_temp::*}:
			set {_x} to yml value "menu.items.%loop-value%" from file "plugins/KhKits/menus/warps.yml"
			set {_lore} to khcore_getLore({_x})
			set {_item} to khcore_getItem({_x})
			replace all "{online}" in {_lore} with "%{_%loop-value%o}%"
			make a gui slot khcore_getSlot({_x}) of {_p} with {_item} named khcore_getName({_x}) with lore colored {_lore} to run:
				make player execute command khcore_getCommand({_x})
				close {_p}'s inventory
	{_type} == "kits":
		khcore_playSound({_p}, CLICK, 1, 15)
		open chest inventory with yaml value "menu.rows" from "khkits.kits" rows named yaml value "menu.title" from "khkits.kits" to {_p}
		set {_slot} to 10
		wait a tick
		set {_temp::*} to skutil yaml nodes "kits" from file "plugins/KhKits/kits.yml"
		set {_y::*} to yaml list "%uuid of {_p}%.kits" from file "plugins/KhKits/players/%{_p}%.yml"
		loop {_temp::*}:
			{_y::*} contains loop-value
			set {_x} to yml value "kits.%loop-value%.icon" from file "plugins/KhKits/kits.yml"
			set {_cmd} to loop-value
			set {_item} to khcore_getItem({_x}) 
			set {_name} to khcore_getName({_x})
			set {_lore} to khcore_getLore({_x})
			replace all "{name}" in {_name} with yml value "kits.%loop-value%.name" from "khkits.kits"
			replace all "{select}" in {_lore} with yml value "game.messages.kit.replaces.select" from "khkits.language"
			make a gui slot {_slot} of {_p} with {_item} named colored {_name} with lore colored {_lore} to run:
				khkits_getKit({_p}, "%{_cmd}%")
				close {_p}'s inventory
			add 1 to {_slot}
			remove loop-value from {_temp::*}
			{_slot} is 17 or 26 or 35:
				add 2 to {_slot}
			{_slot} == 37:
				stop
	{_type} == "shop":
		khcore_playSound({_p}, CLICK, 1, 15)
		open chest inventory with yaml value "menu.rows" from "khkits.menus/shop" rows named yaml value "menu.title" from "khkits.menus/shop" to {_p}
		wait a tick
		set {_y::*} to size of yaml list "%uuid of {_p}%.kits" from file "plugins/KhKits/players/%{_p}%.yml"
		set {_x::*} to size of skutil yaml nodes "kits" from file "plugins/KhKits/kits.yml"
		set {_temp::*} to skutil yaml nodes "menu.items" from file "plugins/KhKits/menus/shop.yml"
		loop {_temp::*}:
			set {_x} to yml value "menu.items.%loop-value%" from file "plugins/KhKits/menus/shop.yml"
			set {_lore} to khcore_getLore({_x})
			set {_item} to khcore_getItem({_x})
			replace all "{count}" in {_lore} with "%{_y::*}%"
			replace all "{max}" in {_lore} with "%{_x::*}%"
			loop "x" and "y":
				set {_c%loop-value-2%} to "%{_%loop-value-2%::*}%" parsed as int
			replace all "{percentage}" in {_lore} with khcore_getPercent({_cy}, {_cx})
			make a gui slot khcore_getSlot({_x}) of {_p} with {_item} named khcore_getName({_x}) with lore colored {_lore} to run:
				khkits_menu({_p}, khcore_getCommand({_x}))
	{_type} == "shop_kits":
		khcore_playSound({_p}, CLICK, 1, 15)
		open chest inventory with yaml value "menu.rows" from "khkits.menus/shop_kits" rows named yaml value "menu.title" from "khkits.menus/shop_kits" to {_p}
		set {_slot} to 10
		wait a tick
		set {KITS::*} to skutil yaml nodes "kits" from file "plugins/KhKits/kits.yml"
		set {_y::*} to yaml list "%uuid of {_p}%.kits" from file "plugins/KhKits/players/%{_p}%.yml"
		size of {_y::*} != size of {KITS::*}:
			make a gui slot 50 of {_p} with arrow named "&aPróxima Página" to run:
				khkits_menu({_p}, "shop_kits2")
			set {_temp::*} to skutil yaml nodes "menu.items" from file "plugins/KhKits/menus/shop_kits.yml"
			loop {_temp::*}:
				set {_x} to yml value "menu.items.%loop-value%" from file "plugins/KhKits/menus/shop_kits.yml"
				set {_item} to khcore_getItem({_x})
				make a gui slot khcore_getSlot({_x}) of {_p} with {_item} named khcore_getName({_x}) with lore khcore_getLore({_x}) to run:
					khkits_menu({_p}, khcore_getCommand({_x}))
			loop {KITS::*}:
				loop-value != "default"
				khcore_listContains({_y::*}, loop-value) == false
				set {_x} to yml value "kits.%loop-value%.icon" from file "plugins/KhKits/kits.yml"
				set {_cmd} to loop-value
				set {_item} to khcore_getItem({_x}) 
				set {_name} to khcore_getName({_x})
				set {_lore} to khcore_getLore({_x})
				set {_price} to yml value "kits.%loop-value%.price" from file "plugins/KhKits/kits.yml"
				replace all "{select}" in {_lore} with yml value "game.messages.kit.replaces.buy" from "khkits.language"
				replace all "{price}" in {_lore} with formatNumber({_price})
				replace all "\n" in {_lore} with "||"
				replace all "{name}" in {_name} with yml value "kits.%loop-value%.name" from "khkits.kits"
				make a gui slot {_slot} of {_p} with {_item} named colored {_name} with lore colored {_lore} to run:
					khkits_buyKit({_p}, "%{_cmd}%")
					khkits_menu({_p}, "shop_kits")
				remove loop-value from {KITS::*}
				add 1 to {_slot}
				{_slot} is 17 or 26 or 35:
					add 2 to {_slot}
				{_slot} == 37:
					stop
		else:
			make a gui slot 22 of {_p} with barrier named "&aVocê já possui todos os kits!" to run:
				khcore_playSound({_p}, ENDERMAN_TELEPORT, 1, 5)
	{_type} == "shop_kits2":
		khcore_playSound({_p}, CLICK, 1, 15)
		open chest inventory with yaml value "menu.rows" from "khkits.menus/shop_kits" rows named yaml value "menu.title" from "khkits.menus/shop_kits" to {_p}
		set {_slot} to 10
		wait a tick
		make a gui slot 48 of {_p} with arrow named "&aPágina Anterior" to run:
			khkits_menu({_p}, "shop_kits")
		set {_temp::*} to skutil yaml nodes "menu.items" from file "plugins/KhKits/menus/shop_kits.yml"
		loop {_temp::*}:
			set {_x} to yml value "menu.items.%loop-value%" from file "plugins/KhKits/menus/shop_kits.yml"
			set {_item} to khcore_getItem({_x})
			make a gui slot khcore_getSlot({_x}) of {_p} with {_item} named khcore_getName({_x}) with lore khcore_getLore({_x}) to run:
				khkits_menu({_p}, khcore_getCommand({_x}))
		set {_y::*} to yaml list "%uuid of {_p}%.kits" from file "plugins/KhKits/players/%{_p}%.yml"
		loop {KITS::*}:
			loop-value != "default"
			khcore_listContains({_y::*}, loop-value) == false
			set {_x} to yml value "kits.%loop-value%.icon" from file "plugins/KhKits/kits.yml"
			set {_cmd} to loop-value
			set {_item} to khcore_getItem({_x}) 
			set {_name} to khcore_getName({_x})
			set {_lore} to khcore_getLore({_x})
			set {_price} to yml value "kits.%loop-value%.price" from file "plugins/KhKits/kits.yml"
			replace all "{select}" in {_lore} with yml value "game.messages.kit.replaces.buy" from "khkits.language"
			replace all "{price}" in {_lore} with formatNumber({_price})
			replace all "\n" in {_lore} with "||"
			replace all "{name}" in {_name} with yml value "kits.%loop-value%.name" from "khkits.kits"
			make a gui slot {_slot} of {_p} with {_item} named colored {_name} with lore colored {_lore} to run:
				khkits_buyKit({_p}, "%{_cmd}%")
				khkits_menu({_p}, "shop_kits2")
			add 1 to {_slot}
			{_slot} is 17 or 26 or 35:
				add 2 to {_slot}
			{_slot} == 37:
				stop
function khkits_getKit(p: player, kit: text):
	yaml nodes "kits.%{_kit}%" from file "plugins/KhKits/kits.yml" exists:
		set {_y::*} to yaml list "%uuid of {_p}%.kits" from file "plugins/KhKits/players/%{_p}%.yml"
		{_y::*} contains "%{_kit}%":
			khcore_playSound({_p}, ITEM_PICKUP, 1, 15)
			set {_p}'s gamemode to adventure
			set {_p}'s fly mode to false
			khkits_setup({_p}, "effects")
			khkits_setup({_p}, "soup")
			set yml value "%uuid of {_p}%.selected-kit" of file "plugins/KhKits/players/%{_p}%.yml" to "%{_kit}%"
			set {_items::*} to skutil yaml nodes "kits.%{_kit}%.items" from file "plugins/KhKits/kits.yml"
			loop {_items::*}:
				set {_x} to yml value "kits.%{_kit}%.items.%loop-value%" from file "plugins/KhKits/kits.yml"
				set {_item} to khcore_getItem({_x})
				set slot khcore_getSlot({_x}) of {_p} to {_item} named khcore_getName({_x})
			set {_armor::*} to skutil yaml nodes "kits.%{_kit}%.armor" from file "plugins/KhKits/kits.yml"
			loop {_armor::*}:
				set {_x} to yml value "kits.%{_kit}%.armor.%loop-value%" from file "plugins/KhKits/kits.yml"
				set {_item} to khcore_getItem({_x})
				{_x} contains "color>":
					set {_item} to {_item} dyed khcore_getColor({_x})
				{_x} contains "HEAD:":
					set slot 0 of {_p} to {_item}
					set helmet of {_p} to {_item}
				else:
					equip {_p} with {_item} named khcore_getName({_x})
			yaml nodes "kits.%{_kit}%.effects" from file "plugins/KhKits/kits.yml" exists:
				set {_temp::*} to skutil yaml nodes "kits.%{_kit}%.effects" from file "plugins/KhKits/kits.yml"
				loop {_temp::*}:
					set {_x} to yml value "kits.%{_kit}%.effects.%loop-value%" from file "plugins/KhKits/kits.yml"
					apply {_x} 3 to {_p} for 99999 seconds
					#send "%{_x}%" to {_p}
					
		else:
			send "&cVocê não possui este kit" to {_p}
	else:
		send "&cEste kit não existe" to {_p}
function khkits_checkKit(p: player) :: text:
	set {_x%{_p}%} to yml value "%uuid of {_p}%.selected-kit" of file "plugins/KhKits/players/%{_p}%.yml"
	return {_x%{_p}%}
function khkits_checkBuild(p: player) :: boolean:
	set {_x%{_p}%} to yml value "%uuid of {_p}%.build" of file "plugins/KhKits/players/%{_p}%.yml"
	return {_x%{_p}%}

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# skills
on walk on sand or sandstone:
	khkits_checkKit(player) == "camel":
		remove speed and regeneration from player
		apply speed and regeneration 1 to player for 3 seconds
		#khkits_skill(player, "%{_kit-sel.%player%}%")

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# load
on unload:
	delete {antitick}
on load:
	khkits_filemanager("create")
	set {antitick} to true
	wait 1 second
	file "plugins/Skript/scripts/KhCore.sk" exists:
		send "&3[KHKITS] &aKhCore was found successfully" to console
	else:
		send "&3[KHKITS] &cKhCore was not found successfully" to console
	text from "https://api.spigotmc.org/legacy/update.php?resource=67595" != "{@version}":
		set {khkp::check_update} to "true"
		send "&3[KHKITS] &cYou are not using the latest version of skript" to console
	else:
		send "&3[KHKITS] &aYou are using the latest version of skript" to console
	send "&3[KHKITS] &aKhKits &8v{@version} &aenabled!" to console
