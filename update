# ─────────────────────────────────────────────────── #
#                    ██ ▄█▀  ██████                   #
#                    ██▄█▒ ▒██    ▒                   #
#                   ▓███▄░ ░ ▓██▄                     #
#                   ▓██ █▄   ▒   ██▒                  #
#                   ▒██▒ █▄▒██████▒▒                  #
#                   ▒ ▒▒ ▓▒▒ ▒▓▒ ▒ ░                  #
#                   ░ ░▒ ▒░░ ░▒  ░ ░                  #
#                   ░ ░░ ░ ░  ░  ░                    #
#                   ░  ░         ░                    #
# ─────────────────────────────────────────────────── #
options:
#	KhKits | crafted by Kick Holse
	version: 1.0
# ─────────────────────────────────────────────────── #
# imports
import:
	org.bukkit.event.player.PlayerInteractEvent

# ─────────────────────────────────────────────────── #
# events
join:
	khkits_main(player, "spawn")
	khkits_main(player, "score")
	setup role to player and true
	set join message to ""
	khcore_roles(player, "get", "isbroadcasted") is "true":
		send khcore_text(player, yaml value "lobby.broadcast" from "ks.kits.language") to all players in world("%world of player%")
	#while player is online:
	#	set {_x} to mgStats(player, "kitpvp.level.level", "get", "", "") parsed as number
	#	set level of player to {_x}
	#	loop all players:
	#		set score "&c&l❤" below player to loop-player's health*2 for player
	#		set score "&c&l❤" below player to player's health*2 for loop-player
	#	wait 1 tick
quit:
	set quit message to ""
chat:
	player does not have permission "khkits.chat.delay" or "khkits.*":
		set {_wait} to difference between {chat_delay::%player%} and now
		{_wait} is less than 3 seconds:
			set {_x} to khcore_delayReplace("%difference between 3 seconds and {_wait}%")
			send replacer "{time}" with {_x} in yaml value "chat.delay" from "ks.kits.language" to player
			cancel event
		else:
			set {chat_delay::%player%} to now
	set {_format} to khcore_text(player, yaml value "chat.format" from "ks.kits.language")
	player has permission "khkits.chat.color" or "khkits.*":
		set {_color} to yaml value "chat.color.custom" from "ks.kits.language"
		replace "{message}" with colored message in {_format}
	else:
		set {_color} to yaml value "chat.color.default" from "ks.kits.language"
		replace "{message}" with message in {_format}
	replace all "{color}" in {_format} with colored {_color}
	set chat format to {_format}
click:
	loop yaml nodes with keys "spawn" from "ks.kits.hotbar":
		set {_x} to yaml value "spawn.%loop-value%.icon" from "ks.kits.hotbar"
		loop-value is "moneyday":
			set {_wait} to difference between {daily_coins::%player%} and now
			{_wait} is less than 1 day:
				set {_x} to yaml value "spawn.%loop-value%.icon-i" from "ks.kits.hotbar"
		name of event-item is name of deserializeItem({_x}, player):
			cancel event
			khkits_execute(player, yaml value "spawn.%loop-value%.execute" from "ks.kits.hotbar")
rightclick:
	player's tool is a mushroom soup:
		health of player is less than max health of player - 0.5:
			cancel event
			khkits_execute(player, "souplife")
rightclick on entity:
	player's tool is a mushroom soup:
		health of player is less than max health of player - 0.5:
			cancel event
			khkits_execute(player, "souplife")
at 11:01:
	set time to 10:00
hunger meter change:
	cancel event
hunger bar change:
	cancel event
weather change:
	cancel event
xp spawn:
	cancel event
projectile hit:
	delete projectile
pickup:
	mgStats(player, "preferencies.build", "get", "", "") is "false"
	cancel event
break:
	mgStats(player, "preferencies.build", "get", "", "") is "false"
	cancel event
place:
	mgStats(player, "preferencies.build", "get", "", "") is "false"
	cancel event
inventory click:
	mgStats(player, "kitpvp.selected_kit", "get", "", "") is "none":
		mgStats(player, "preferencies.build", "get", "", "") is "false":
			cancel event
	clicked slot is 36 or 37 or 38 or 39:
		cancel event
drop:
	event-item is a bowl:
		wait a tick
		clear dropped items
	else:
		mgStats(player, "preferencies.build", "get", "", "") is "false"
		cancel event
on PlayerInteractEvent:
	set {_p} to event.getPlayer()
	mgStats({_p}, "preferencies.build", "get", "", "") is "false":
		loop yaml nodes with keys "spawn" from "ks.kits.hotbar":
			set {_x} to yaml value "spawn.%loop-value%.icon" from "ks.kits.hotbar"
			loop-value is "moneyday":
				set {_wait} to difference between {daily_coins::%{_p}%} and now
				{_wait} is less than 1 day:
					set {_x} to yaml value "spawn.%loop-value%.icon-i" from "ks.kits.hotbar"
			{_p}'s tool's name is name of deserializeItem({_x}, {_p}):
				khkits_execute({_p}, yaml value "spawn.%loop-value%.execute" from "ks.kits.hotbar")
		mgStats({_p}, "kitpvp.selected_kit", "get", "", "") = "none"
		cancel event
damage of player:
	attacker is a player:
		{lasthit.%victim%} is not set:
			set {lasthit.%victim%} to "%attacker%" parsed as player
		{lasthit.%victim%} != attacker:
			set {lasthit.%victim%} to "%attacker%" parsed as player
		mgStats(victim, "kitpvp.selected_kit", "get", "", "") is "achilles":
			attacker's tool is wooden_sword:
				increase damage by 165%
			else:
				increase damage by -100%
		mgStats(attacker, "kitpvp.selected_kit", "get", "", "") is "none"
		cancel event
	damage cause is void:
		cancel event
		khkits_respawn(victim)
	damage cause is fall:
		mgStats(victim, "kitpvp.selected_kit", "get", "", "") is "stomper":
			set {_players::*} to all players in radius 5 of victim
			remove victim from {_players::*}
			loop {_players::*}:
				mgStats(loop-value, "kitpvp.selected_kit", "get", "", "") is "antistomper" or "none" or "fps" or "lava-challenge" or "knockback":
					remove loop-value from {_players::*}
				else:
					loop-value is sneaking
					remove loop-value from {_players::*}
			size of {_players::*} > 0:
				loop {_players::*}:
					set {_damage} to damage*2
					set {lasthit.%loop-value%} to "%victim%" parsed as offlineplayer
					damage loop-value by {_damage} hearts
		{lasthit.%victim%} is not set
		cancel event
		stop
	attacker != victim:
		"%damage cause%" is "projectile"
		projectile is arrow
		victim is not dead
		mgStats(victim, "kitpvp.selected_kit", "get", "", "") != "none":
			send action bar replacer "{hp}" and "{name}" with "%victim's health - damage%" and khcore_roles(victim, "get", "colored") in yaml value "ingame.messages.bow.hit" from "ks.kits.language" to attacker
	mgStats(victim, "kitpvp.selected_kit", "get", "", "") is "none":
		cancel event
	else:
		show blood at victim
		mgStats(victim, "kitpvp.selected_kit", "get", "", "") is "turtle":
			victim is sneaking
			increase damage by -100%
			khkits_perk(victim)
	damage >= health of victim:
		mgStats(victim, "kitpvp.selected_kit", "get", "", "") != "lava-challenge":
			remove yaml value "options.coins.death" from "ks.kits.language" from {summary_coins::%victim%}
			mgStats(victim, "kitpvp.coins", "remove", "number", yaml value "options.coins.death" from "ks.kits.language")
		mgStats(victim, "kitpvp.killstreak", "get", "", "") parsed as number > 0:
			set {_ks} to mgStats(victim, "kitpvp.killstreak", "get", "", "")
			send "&cVocê perdeu um kill streak de %{_ks}%." to victim
			mgStats(victim, "kitpvp.killstreak", "set", "number", "0")
		mgStats(victim, "kitpvp.selected_kit", "get", "", "") != "none"
		cancel event
		create a fake explosion at the victim
		mgStats(victim, "kitpvp.deaths", "add", "number", "1")
		{lasthit.%victim%} is a player:
			mgStats({lasthit.%victim%}, "kitpvp.level.xp", "add", "number", yaml value "options.xp.kills" from "ks.kits.language")
			loop "xp" and "xp_to_next_level":
				set {_%loop-value%} to mgStats({lasthit.%victim%}, "kitpvp.level.%loop-value%", "get", "", "") parsed as number
			{_xp} >= {_xp_to_next_level}:
				mgStats({lasthit.%victim%}, "kitpvp.level.level", "add", "number", "1")
				mgStats({lasthit.%victim%}, "kitpvp.level.xp_to_next_level", "add", "number", "%{_xp_to_next_level}%")
				send action bar replacer "{level}" with formatNumber(mgStats({lasthit.%victim%}, "kitpvp.level.level", "get", "", "") parsed as number) in yaml value "ingame.messages.level_up" from "ks.kits.language" to {lasthit.%victim%}
				mgStats({lasthit.%victim%}, "kitpvp.coins", "add", "number", mgStats({lasthit.%victim%}, "kitpvp.level.reward", "get", "", ""))
				set {summary_levelcoins::%{lasthit.%victim%}%} to mgStats({lasthit.%victim%}, "kitpvp.level.reward", "get", "", "") parsed as number
				mgStats({lasthit.%victim%}, "kitpvp.level.reward", "add", "number", "100")
				play sound "LEVEL_UP" with 1 and 5 to {lasthit.%victim%}
			mgStats({lasthit.%victim%}, "kitpvp.selected_kit", "get", "", "") is "resoup":
				khkits_execute({lasthit.%victim%}, "getsoup")
			mgStats({lasthit.%victim%}, "kitpvp.kills", "add", "number", "1")
			mgStats({lasthit.%victim%}, "kitpvp.coins", "add", "number", yaml value "options.coins.kills" from "ks.kits.language")
			mgStats({lasthit.%victim%}, "kitpvp.killstreak", "add", "number", "1")
			send replacer "{name}" and "{killer}" with khcore_roles(victim, "get", "colored") and khcore_roles({lasthit.%victim%}, "get", "colored") in yaml value "ingame.broadcast.killed" from "ks.kits.language" to all players in {lasthit.%victim%}'s world
			add 1 to {summary_kills::%{lasthit.%victim%}%}
			loop "xp" and "coins":
				add yaml value "options.%loop-value%.kills" from "ks.kits.language" to {summary_%loop-value%::%{lasthit.%victim%}%}
			khkits_summary(victim)
			khkits_respawn(victim)
		else:
			send replacer "{name}" with khcore_roles(victim, "get", "colored") in yaml value "ingame.broadcast.suicide" from "ks.kits.language" to all players in victim's world
		delete {lasthit.%victim%}
sign change:
	line 1 is "[khkits]"
	line 2 is "soup"
	loop 4 times:
		set line loop-value to yaml value "ingame.sign.soup.line-%loop-value%" from "ks.kits.language"
rightclick on sign:
	loop 4 times:
		line loop-value of clicked block != yaml value "ingame.sign.soup.line-%loop-value%" from "ks.kits.language"
		stop
	mgStats(player, "kitpvp.selected_kit", "get", "", "") != "none"
	khkits_execute(player, "getsoup")

# ─────────────────────────────────────────────────── #
# cmds
command khkits [<text=help>] [<text>] [<text>] [<text>]:
	permission: ks.kits.*
	permission message: §3[KhKits] §7v{@version} §f- §7Crafted by §6Kick Holse§7.
	trigger:
		set {_help::*} to "&3 /khkits build &f- &7Turn on/off constructor mode." and "&3 /khkits coins &f- &7Manager coins of a player" and "&3 /khkits set &f- &7Set the warps and spawn"
		arg 1 is "help":
			khcore_sendHelp(executor, {_help::*}, "KhKits")
		arg 1 parsed as number is a number:
			khcore_sendHelp(executor, {_help::*}, "KhKits", arg 1 parsed as number)
		else:
			arg 1 is "build":
				mgStats(player, "preferencies.build", "get", "", "") is "false":
					mgStats(player, "preferencies.build", "set", "boolean", "true")
					send action bar "&aModo construtor ativado." to player
					set player's gamemode to creative
				else:
					mgStats(player, "preferencies.build", "set", "boolean", "false")
					send action bar "&cModo construtor desativado." to player
					set player's gamemode to adventure
					player has permission "ks.kits.fly" or "ks.kits.*":
						mgStats(player, "kitpvp.selected_kit", "get", "", "") is "none"
						set player's fly mode to true
			arg 1 is "set":
				arg 2 != "spawn" or "fps" or "lava-challenge" or "knockback":
					send "%nl%  &eHelp - Warps 1/1%nl% "
					loop "spawn" and "fps" and "lava-challenge" and "knockback":
						send "&3 /khkits set %loop-value%&f - &7Set the %loop-value%."
					send newline
				loop "spawn" and "fps" and "lava-challenge" and "knockback":
					arg 2 is loop-value
					set yaml value "locations.%loop-value%" from file "plugins/KhKits/locations.yml" to serializeLocati(player's location)
					send action bar "&aA localização &2%loop-value%&a foi definida com sucesso!" to player
					unload yaml "ks.kits.locations"
					load yaml "plugins/KhKits/locations.yml" as "ks.kits.locations"
			arg 1 is "coins":
				arg 2 != "add" or "remove" or "set":
					send "%nl%  &eHelp - Coins%nl% "
					send "&3 /khkits coins add&f - &7Add coins"
					send "&3 /khkits coins remove&f - &7Remove coins"
					send "&3 /khkits coins set &f- &7Set coins%nl% "
				arg 2 is "add":
					arg 4 is set:
						arg 3 parsed as offlineplayer is online:
							"%arg 4 parsed as int%" contains "none" or "-":
								send "&cUtilize apenas números positivos para isso."
							else:
								mgStats(arg 3 parsed as offlineplayer, "kitpvp.coins", "add", "number", arg 4)
								send "&aVocê adicionou &6%formatNumber(arg 4 parsed as int)% moedas&a para %khcore_roles(arg 3 parsed as offlineplayer, ""get"", ""colored"")%&a."
						else:
							send "&cEste jogador está offline no momento."
					else:
						send "&cUtilize /khkits coins add [jogador] [número]"
				arg 2 is "remove":
					arg 4 is set:
						arg 3 parsed as offlineplayer is online:
							"%arg 4 parsed as int%" contains "none" or "-":
								send "&cUtilize apenas números positivos para isso."
							else:
								mgStats(arg 3 parsed as offlineplayer, "kitpvp.coins", "remove", "number", arg 4)
								send "&cVocê removeu &6%formatNumber(arg 4 parsed as int)% moedas&c de %khcore_roles(arg 3 parsed as offlineplayer, ""get"", ""colored"")%&c."
						else:
							send "&cEste jogador está offline no momento."
					else:
						send "&cUtiliz: /khkits coins remove [jogador] [número]"
				arg 2 is "set":
					arg 4 is set:
						arg 3 parsed as offlineplayer is online:
							"%arg 4 parsed as int%" contains "none" or "-":
								send "&cUtilize apenas números positivos para isso."
							else:
								mgStats(arg 3 parsed as offlineplayer, "kitpvp.coins", "set", "number", arg 4)
								send "&aVocê setou as moedas de %khcore_roles(arg 3 parsed as offlineplayer, ""get"", ""colored"")%&a para &6%formatNumber(arg 4 parsed as int)%&a."
						else:
							send "&cEste jogador está offline no momento."
					else:
						send "&cUtilize /khkits coins set [jogador] [número]"
command:
	command is "fps" or "spawn" or "lava-challenge" or "knockback"
	cancel event
	khkits_main(player, command)

# ─────────────────────────────────────────────────── #
# functions
function khkits_summary(p: player):
	{summary_kills::%{_p}%} > 0:
		set {_s} to ""
		{summary_kills::%{_p}%} > 1:
			set {_s} to "s"
		send replacer "\n" with newline in yaml value "ingame.messages.summary.base" from "ks.kits.language" to {_p}
		send replacer "\n" and "{coins}" and "{kills}" and "{s}" with newline and formatNumber({summary_coins::%{_p}%}) and formatNumber({summary_kills::%{_p}%}) and "%{_s}%" in yaml value "ingame.messages.summary.coins" from "ks.kits.language" to {_p}
		send replacer "\n" and "{xp}" and "{kills}" and "{s}" with newline and formatNumber({summary_xp::%{_p}%}) and formatNumber({summary_kills::%{_p}%}) and "%{_s}%" in yaml value "ingame.messages.summary.xp" from "ks.kits.language" to {_p}
		{summary_levelcoins::%{_p}%} is set:
			send replacer "{coins}" with formatNumber({summary_levelcoins::%{_p}%}) in yaml value "ingame.messages.summary.level_up" from "ks.kits.language" to {_p}
		send newline to {_p}
		loop "xp" and "kills" and "coins":
			delete {summary_%loop-value%::%{_p}%}
function khkits_respawn(p: player):
	khcore_clear({_p})
	set {_x} to mgStats({_p}, "kitpvp.selected_kit", "get", "", "")
	"%{_x}%" is not "fps" or "lava-challenge" or "knockback" or "none":
		set {_x} to "none"
	khkits_main({_p}, replacer "none" with "spawn" in {_x})
function khkits_main(p: player, y: text="hotbar"):
	{_y} is "hotbar":
		loop yaml nodes with keys "spawn" from "ks.kits.hotbar":
			set {_x} to yaml value "spawn.%loop-value%.icon" from "ks.kits.hotbar"
			loop-value is "moneyday":
				set {_wait} to difference between {daily_coins::%{_p}%} and now
				{_wait} is less than 1 day:
					set {_x} to yaml value "spawn.%loop-value%.icon-i" from "ks.kits.hotbar"
			set slot yaml value "spawn.%loop-value%.slot" from "ks.kits.hotbar" of {_p} to deserializeItem({_x}, {_p})
	{_y} is "score":
		delete stylish scoreboard "SCORE-%{_p}%"
		create new stylish scoreboard named "SCORE-%{_p}%"
		set {_line} to 1
		loop {scoreline} times:
			create a new id based score "SCORE-%{_p}%Slot%{_line}%" with text "&%{_line}%" slot {_line} for stylish scoreboard "SCORE-%{_p}%"
			add 1 to {_line}
		khkits_scroller({_p})
		while {_p} is online:
			stylish scoreboard "SCORE-%{_p}%" exists
			set stylish scoreboard of {_p} to "SCORE-%{_p}%"
			set {_line} to 1
			loop {scoreline} times:
				set {_x} to "%{score.line::%{_line}%}%"
				set the text of id "SCORE-%{_p}%Slot%{_line}%" to khcore_text({_p}, {_x})
				add 1 to {_line}
			wait 1 seconds
	{_y} != "hotbar" or "score":
		yaml value "locations.%{_y}%" from "ks.kits.locations" != "null":
			khcore_clear({_p})
			teleport {_p} to deserializeLoca(yaml value "locations.%{_y}%" from "ks.kits.locations")
			play sound "LEVEL_UP" with 1 and 15 to {_p}
			set {_w} to "%{_y}%"
			{_y} != "spawn":
				khkits_execute({_p}, "getsoup")
				loop yaml list "warps.%{_y}%.armor" from "ks.kits.menus/warps":
					loop-value != ""
					equip {_p} with unbreakable deserializeItem("%loop-value%", {_p}) without nbt
				loop yaml list "warps.%{_y}%.items" from "ks.kits.menus/warps":
					loop-value != ""
					set {_x} to loop-value
					set {_slot} to first element of {_x} split at " : "
					set {_item} to replacer "%{_slot}% : " with "" in "%loop-value%"
					set slot {_slot} parsed as number of {_p} to unbreakable deserializeItem({_item}, {_p}) without nbt
			else:
				set {_w} to "none"
				khkits_main({_p})
				{_p} has permission "khkits.fly" or "khkits.*":
					set {_p}'s fly mode to true
			mgStats({_p}, "kitpvp.selected_kit", "set", "text", "%{_w}%")
function khkits_scroller(p: player):
	{antitick} is true
	while {_p} is online:
		stylish scoreboard "SCORE-%{_p}%" exists
		loop yaml list "scoreboard.titles" from "ks.kits.language":
			set title of stylish scoreboard "SCORE-%{_p}%" to colored "%loop-value%"
			set {_x} to yaml value "scoreboard.update-time" from "ks.kits.language"
			wait "%{_x}% ticks" parsed as timespan
function khkits_menus(p: player, menu: text):
	{_menu} is "warps" or "shop":
		open chest inventory with yaml value "menu.rows" from "ks.kits.menus/%{_menu}%" rows named yaml value "menu.title" from "ks.kits.menus/%{_menu}%" to {_p}
		wait a tick
		loop yaml nodes with keys "menu.items" from "ks.kits.menus/%{_menu}%":
			set {_item} to yaml value "menu.items.%loop-value%.icon" from "ks.kits.menus/%{_menu}%"
			{_menu} is "shop":
				set {_count} to size of yaml list "%uuid of {_p}%.kitpvp.kits" from file "plugins/KhCore/players/%uuid of {_p}%.yml"
				set {_max} to size of yaml nodes "kits" from file "plugins/KhKits/kits.yml"
				set {_percent} to "%(100 / {_max}) * {_count}%"
				set {_percent} to first element of {_percent} split at "."
				loop "max" and "count" and "percent":
					replace "{%loop-value-2%}" with "%{_%loop-value-2%}%" in {_item}
			{_menu} is "warps":
				set {_%loop-value%} to number of all players
				loop all players:
					set {_kit-sel} to mgStats(loop-player, "kitpvp.selected_kit", "get", "", "")
					{_kit-sel} != loop-value-1:
						remove 1 from {_%loop-value-1%}
				{_%loop-value-1%} is 0:
					set {_%loop-value-1%} to yaml value "menu.replaces.nobody_playing" from "ks.kits.menus/warps"
				replace "{on}" with {_%loop-value-1%} in {_item}
			set {_w} to loop-value
			make a gui slot yaml value "menu.items.%loop-value%.slot" from "ks.kits.menus/%{_menu}%" of {_p} with deserializeItem({_item}, {_p}) without nbt to run:
				khkits_execute({_p}, yaml value "menu.items.%{_w}%.execute" from "ks.kits.menus/%{_menu}%")
	{_menu} is "shop_kits":
		set {_temp::*} to yaml nodes "kits" from file "plugins/KhKits/kits.yml"
		loop yaml list "%uuid of {_p}%.kitpvp.kits" from file "plugins/KhCore/players/%uuid of {_p}%.yml":
			remove loop-value from {_temp::*}
		khkits_paggedMenu({_p}, "menus/shop_kits", {_temp::*})
	{_menu} is "kits":
		khkits_paggedMenu({_p}, {_menu}, yaml list "%uuid of {_p}%.kitpvp.kits" from file "plugins/KhCore/players/%uuid of {_p}%.yml")
	{_menu} is "moneyday":
		set {_wait} to difference between {daily_coins::%{_p}%} and now
		{_wait} is less than 1 day:
			set {_x} to khcore_delayReplace("%difference between 1 day and {_wait}%")
			send action bar replacer "{time}" with {_x} in yaml value "ingame.messages.delay" from "ks.kits.language" to {_p}
		else:
			set {daily_coins::%{_p}%} to now
			set {_x} to a random integer between 500 and 1000
			mgStats({_p}, "kitpvp.coins", "add", "number", "%{_x}%")
			send replacer "{coins}" with formatNumber({_x}) in yaml value "ingame.messages.daily_coins" from "ks.kits.language" to {_p}
			khkits_main({_p})
function khkits_paggedMenu(p: player, type: text, var: objects, page: number = 0):
	set {_pageStart} to 21*{_page}
	set {_i} to 1
	set {_slot} to 10
	open chest inventory with yaml value "menu.rows" from "ks.kits.%{_type}%" rows named yaml value "menu.title" from "ks.kits.%{_type}%" to {_p}
	wait a tick
	yaml nodes with keys "menu.items" from "ks.kits.%{_type}%" exists:
		loop yaml nodes with keys "menu.items" from "ks.kits.%{_type}%":
			set {_x} to loop-value
			set {_item} to yaml value "menu.items.%loop-value%.icon" from "ks.kits.%{_type}%"
			make a gui slot yaml value "menu.items.%loop-value%.slot" from "ks.kits.%{_type}%" of {_p} with deserializeItem({_item}, {_p}) without nbt to run:
				khkits_execute({_p}, yaml value "menu.items.%{_x}%.execute" from "ks.kits.%{_type}%")
	loop {_var::*}:
		(loop-index parsed as integer) > {_pageStart}
		set {_item} to yaml value "kits.%loop-value%.icon" from "ks.kits.kits"
		{_type} is "menus/shop_kits":
			set {_buy} to yaml value "menu.replaces.buy" from "ks.kits.kits"
			set {_coins} to yaml value "menu.replaces.insufficient-coins" from "ks.kits.kits"
			set {_price} to replacer "\n" with "||" in replacer "{price}" with formatNumber(yaml value "kits.%loop-value%.price" from "ks.kits.kits") in yaml value "menu.replaces.price" from "ks.kits.kits"
			mgStats({_p}, "kitpvp.coins", "get", "", "") parsed as number >= yaml value "kits.%loop-value%.price" from "ks.kits.kits":
				replace "{state}" in {_item} with "%{_price}%%{_buy}%"
			else:
				replace "{state}" in {_item} with "%{_price}%%{_coins}%"
		{_type} is "kits":
			replace "{state}" in {_item} with yaml value "menu.replaces.select" from "ks.kits.kits"
		set {_kit} to loop-value
		replace "{name}" with yaml value "kits.%loop-value%.name" from "ks.kits.kits" in {_item}
		make a gui slot {_slot} of {_p} with deserializeItem({_item}, {_p}) without nbt to run:
			{_type} is "menus/shop_kits":
				khkits_kit({_p}, "buy", "%{_kit}%")
				khkits_menus({_p}, "shop_kits")
			{_type} is "kits":
				khkits_kit({_p}, "get", "%{_kit}%")
				close {_p}'s inventory
		add 1 to {_slot}
		{_slot} is 17 or 26:
			add 2 to {_slot}
		{_slot} = ((35*{_i})):
			exit loop
	(amount of {_var::*}) > {_pageStart} + 21:
		make a gui slot 53 of {_p} with deserializeItem(replacer "{next_page}" with "%{_page}+1+1%" in yaml value "options.pagged.next_page" from "ks.kits.language", {_p}) to run:
			khkits_paggedMenu({_p}, "%{_type}%", {_var::*}, ({_page} + 1))
	{_page} > 0:
		make a gui slot 45 of {_p} with deserializeItem(replacer "{previous_page}" with "%{_page}+1-1%" in yaml value "options.pagged.previous_page" from "ks.kits.language", {_p}) to run:
			khkits_paggedMenu({_p}, "%{_type}%", {_var::*}, ({_page} - 1))
	{_slot} is 10:
		make a gui slot 22 of {_p} with barrier without nbt named "&cVocê já possui todos os kits!" to run:
			play sound "ITEM_PICKUP" with 1 and 15 to {_p}
function khkits_execute(p: player, str: string):
	{_str} contains "warp>":
		khkits_main({_p}, last element of {_str} split at ">")
	{_str} contains "menu>":
		khkits_menus({_p}, last element of {_str} split at ">")
	{_str} is "kit>random_kit":
		set {_x} to random element of yaml list "%uuid of {_p}%.kitpvp.kits" from file "plugins/KhCore/players/%uuid of {_p}%.yml"
		close {_p}'s inventory
		khkits_kit({_p}, "get", {_x})
	{_str} is "getsoup":
		give {_p} deserializeItem(yaml value "ingame.soup" from "ks.kits.hotbar", {_p})
		loop "red_mushroom" and "brown_mushroom" and "bowl":
			set {_item} to yaml value "ingame.%loop-value%" from "ks.kits.hotbar"
			set {_slot} to first element of {_item} split at " : "
			set {_item} to replacer "%{_slot}% : " with "" in {_item}
			set slot {_slot} parsed as number of {_p} to deserializeItem({_item}, {_p}) without nbt
	{_str} is "souplife":
		set {_kit} to mgStats({_p}, "kitpvp.selected_kit", "get", "", "")
		set {_x} to a random number between 2 and 4
		send action bar "&7+%{_x}% &4&l❤" to {_p}
		set the health of {_p} to the health of {_p} + {_x}
		set {_slot} to selected hotbar slot of {_p}
		{_kit} != "quickdropper":
			play sound "BURP" with 1 and 5 to {_p}
			set {_item} to yaml value "ingame.bowl" from "ks.kits.hotbar"
			set {_f} to first element of {_item} split at " : "
			set {_item} to replacer "%{_f}% : " with "" in {_item}
			set slot {_slot} of {_p} to deserializeItem(replacer "64" with "1" in {_item}, {_p}) without nbt
		else:
			set slot {_slot} of {_p} to air
			play sound "ITEM_PICKUP" with 1 and 5 to {_p}
function khkits_kit(p: player, type: text, kit: text):
	{_type} is "buy":
		yaml value "kits.%{_kit}%" from "ks.kits.kits" exists:
			yaml list "%uuid of {_p}%.kitpvp.kits" from file "plugins/KhCore/players/%uuid of {_p}%.yml" contains {_kit}:
				stop
			mgStats({_p}, "kitpvp.coins", "get", "", "") parsed as number >= yaml value "kits.%{_kit}%.price" from "ks.kits.kits":
				send replacer "{kit}" with yaml value "kits.%{_kit}%.name" from "ks.kits.kits" in yaml value "ingame.messages.kit.buy" from "ks.kits.language" to {_p}
				add "%{_kit}%" to yaml list "%uuid of {_p}%.kitpvp.kits" from file "plugins/KhCore/players/%uuid of {_p}%.yml"
				mgStats({_p}, "kitpvp.coins", "remove", "number", yaml value "kits.%{_kit}%.price" from "ks.kits.kits")
				khkits_menus({_p}, "shop_kits")
			else:
				send "&cVocê não tem moedas o suficiente." to {_p}
	{_type} is "get":
		yaml value "kits.%{_kit}%" from "ks.kits.kits" exists:
			set {_kits::*} to yaml list "%uuid of {_p}%.kitpvp.kits" from file "plugins/KhCore/players/%uuid of {_p}%.yml"
			{_kits::*} contains "%{_kit}%"
			khcore_clear({_p})
			khkits_execute({_p}, "getsoup")
			play sound "ITEM_PICKUP" with 1 and 15 to {_p}
			send action bar replacer "{kit}" with yaml value "kits.%{_kit}%.name" from "ks.kits.kits" in yaml value "ingame.messages.kit.select" from "ks.kits.language" to {_p}
			mgStats({_p}, "kitpvp.selected_kit", "set", "text", "%{_kit}%")
			loop yaml list "kits.%{_kit}%.armor" from "ks.kits.kits":
				loop-value != ""
				set {_loop} to "%loop-value%"
				equip {_p} with unbreakable deserializeItem("%loop-value%", {_p}) without nbt
				set {_spl::*} to {_loop} split at " : "
				loop {_spl::*}:
					loop-value-2 contains "pintar>":
						set {_x} to last element of loop-value-2 split at ">"
						{_loop} contains "HELMET":
							dye {_p}'s helmet {_x} parsed as color
						{_loop} contains "CHESTPLATE":
							dye {_p}'s chestplate {_x} parsed as color
						{_loop} contains "LEGGINGS":
							dye {_p}'s leggings {_x} parsed as color
						{_loop} contains "BOOTS":
							dye {_p}'s boots {_x} parsed as color
			loop yaml list "kits.%{_kit}%.items" from "ks.kits.kits":
				loop-value != ""
				set {_x} to loop-value
				set {_slot} to first element of {_x} split at " : "
				set {_item} to replacer "%{_slot}% : " with "" in "%loop-value%"
				set slot {_slot} parsed as number of {_p} to unbreakable deserializeItem({_item}, {_p}) without nbt
			yaml nodes with keys "kits.%{_kit}%.effects" from "ks.kits.kits" exists:
				loop nodes with keys "kits.%{_kit}%.effects" from "ks.kits.kits":
					loop "effect" and "power" and "time":
						set {_%loop-value-2%} to yaml value "kits.%{_kit}%.effects.%loop-value-1%.%loop-value-2%" from "ks.kits.kits"
					apply ({_effect} parsed as potion) {_power} to {_p} for {_time} parsed as timespan
function khkits_perk(p: player):
	set {_kit} to mgStats({_p}, "kitpvp.selected_kit", "get", "", "")
	send actionbar replacer "{kit}" with yaml value "kits.%{_kit}%.name" from "ks.kits.kits" in "&a&lHABILIDADE &f- &7{kit}" to {_p}
function khkits_delay(p: player, time: timespan) :: boolean:
	set {_wait} to difference between {kit_delay::%{_p}%} and now
	{_wait} is less than {_time}:
		set {_tempo} to "%difference between {_time} and {_wait}%"
		set {_n::*} to {_tempo} split at " "
		set {_v} to first element of {_n::1} split at "."
		replace "%{_n::1}%" with "%{_v}%" in {_tempo}
		replace all " seconds" and " second" with "s" in {_tempo}
		send action bar replacer "{time}" with {_tempo} in yaml value "ingame.messages.delay" from "ks.kits.language" to {_p}
		return false
	else:
		set {kit_delay::%{_p}%} to now
		return true

# ─────────────────────────────────────────────────── #
# perks
walk on sand or sandstone:
	mgStats(player, "kitpvp.selected_kit", "get", "", "") = "camel":
		khkits_perk(player)
		remove speed and regeneration from player
		apply speed and regeneration 1 to player for 3 seconds
walk on water:
	mgStats(player, "kitpvp.selected_kit", "get", "", "") = "aquaman":
		khkits_perk(player)
		remove speed and regeneration from player
		apply speed and regeneration 2 to player for 5 seconds
leftclick:
	event-item is firework rocket:
		mgStats(player, "kitpvp.selected_kit", "get", "", "") = "kangaroo"
		cancel event
		khkits_perk(player)
		block under player is not air:
			push player upward at speed 0.5
			push player forward at speed 3
rightclick:
	event-item is clock:
		mgStats(player, "kitpvp.selected_kit", "get", "", "") = "timelord"
		khkits_delay(player, 20 seconds) is true:
			set {_x::*} to all players
			loop all players:
				mgStats(loop-player, "kitpvp.selected_kit", "get", "", "") = "none" or "fps" or "lava-challenge" or "knockback":
					remove loop-player from {_x::*}
			remove player from {_x::*}
			remove slowness and jump boost from {_x::*}
			wait 3 tick
			apply slowness and jump boost 250 to {_x::*} for 5 seconds
			khkits_perk(player)
			wait 5 seconds
			loop {_x::*}:
				mgStats(loop-value, "kitpvp.selected_kit", "get", "", "") = "tank":
					apply mining fatigue and slowness 1 to loop-value for 99999 seconds
	event-item is firework rocket:
		mgStats(player, "kitpvp.selected_kit", "get", "", "") = "kangaroo"
		cancel event
		block under player is not air:
			push player upward at speed 1
			khkits_perk(player)
	event-item is wooden axe:
		mgStats(player, "kitpvp.selected_kit", "get", "", "") = "thor"
		khkits_delay(player, 30 seconds) is true:
			strike lightning at the targeted block
			khkits_perk(player)
	event-item is white glass pane:
		mgStats(player, "kitpvp.selected_kit", "get", "", "") = "phanton"
		khkits_delay(player, 20 seconds) is true:
			hide player to all players
			khkits_perk(player)
			wait 5 seconds
			reveal player to all players
	event-item is feather:
		mgStats(player, "kitpvp.selected_kit", "get", "", "") = "flyingchicken"
		khkits_delay(player, 30 seconds) is true:
			set player's fly mode to true
			khkits_perk(player)
			wait 5 seconds
			set player's fly mode to false
	event-item is slime:
		mgStats(player, "kitpvp.selected_kit", "get", "", "") = "zen"
		khkits_delay(player, 15 seconds) is true:
			set {_players::*} to all players
			remove player from {_players::*}
			loop all players:
				mgStats(loop-player, "kitpvp.selected_kit", "get", "", "") = "none" or "fps" or "lava-challenge" or "knockback":
					remove loop-player from {_players::*}
			teleport player to random player out of {_players::*}
			#khcore_playSound(player, ENDERMAN_TELEPORT, 0.5, 5)
			khkits_perk(player)
rightclick on entity:
	entity is a player
	event-item is saddle:
		mgStats(player, "kitpvp.selected_kit", "get", "", "") = "horseman"
		mgStats(entity, "kitpvp.selected_kit", "get", "", "") != "none" or "fps" or "lava-challenge" or "knockback":
			cancel event
			khkits_delay(player, 10 seconds) is true:
				khkits_perk(player)
				make entity ride player
	event-item is blaze rod:
		mgStats(player, "kitpvp.selected_kit", "get", "", "") = "monk"
		mgStats(entity, "kitpvp.selected_kit", "get", "", "") != "none" or "fps" or "lava-challenge" or "knockback":
			khkits_delay(player, 15 seconds) is true:
				set {_kit} to mgStats(entity, "kitpvp.selected_kit", "get", "", "")
				set {_slot} to a random integer between 0 and 35
				{_slot} is 8 or 13 or 14 or 15 or 17:
					set {_slot} to a random integer between 18 and 35
				khkits_perk(player)
				remove any sword from the entity
				loop yaml list "kits.%{_kit}%.items" from "ks.kits.kits":
					loop-value contains "SWORD":
						set {_item} to "%loop-value%"
						set {_x} to first element of {_item} split at " : "
						set {_item} to replacer "%{_x}% : " with "" in "%{_item}%"
						set slot {_slot} of entity to unbreakable deserializeItem({_item}, entity) without nbt
				set {_item} to yaml value "ingame.bowl" from "ks.kits.hotbar"
				set {_f} to first element of {_item} split at " : "
				set {_item} to replacer "%{_f}% : " with "" in {_item}
				give entity deserializeItem(replacer "64" with "1" in {_item}, entity) without nbt
fishing:
	mgStats(player, "kitpvp.selected_kit", "get", "", "") = "fisherman":
		teleport {fisherman::%player%} to player
		delete {fisherman::%player%}
		khkits_perk(player)
shoot:
	mgStats(shooter, "kitpvp.selected_kit", "get", "", "") = "switcher":
		shooter's tool is a snowball
		set {switcher::%shooter%} to true
		set metadata value "SWITCHER" of projectile to "%shooter%"
projectile hit:
	set {_projectile} to metadata value "SWITCHER" of projectile
	delete metadata value "SWITCHER" of projectile
	delete {switcher::%{_projectile}%}
damage of player:
	attacker is a player
	mgStats(victim, "kitpvp.selected_kit", "get", "", "") != "none" or "fps" or "lava-challenge" or "knockback"
	mgStats(attacker, "kitpvp.selected_kit", "get", "", "") = "ninja":
		set {ninja_v::%attacker%} to "%victim%"
		set {ninja_t::%attacker%} to 60
	mgStats(attacker, "kitpvp.selected_kit", "get", "", "") = "fisherman":
		set {fisherman::%attacker%} to "%victim%" parsed as player
	mgStats(attacker, "kitpvp.selected_kit", "get", "", "") = "switcher":
		projectile is a snowball
		{switcher::%attacker%} is true:
			cancel event
			set {_vL} to location of victim
			set {_aL} to location of attacker
			teleport victim to {_aL}
			teleport attacker to {_vL}
			#khcore_playSound(attacker, ENDERMAN_TELEPORT, 1, 5)
			#khcore_playSound(victim, ENDERMAN_TELEPORT, 1, 5)
			delete {switcher::%attacker%}
			khkits_perk(attacker)
	{skill::invencible_%victim%} is true:
		cancel event
		set {_x} to khcore_roles(victim, "get", "colored")
		send actionbar "%{_x}%&a está usando o kit Invencível." to attacker
	mgStats(victim, "kitpvp.selected_kit", "get", "", "") = "thorns":
		chance of 25%:
			damage attacker by damage/2 hearts
			khkits_perk(victim)
	mgStats(attacker, "kitpvp.selected_kit", "get", "", "") = "reaper":
		chance of 25%:
			apply wither 2 to victim for 5 seconds
			khkits_perk(attacker)
	mgStats(attacker, "kitpvp.selected_kit", "get", "", "") = "viper":
		chance of 20%:
			apply poison 2 to victim for 3 seconds
			khkits_perk(attacker)
	mgStats(attacker, "kitpvp.selected_kit", "get", "", "") = "bonfire":
		chance of 35%:
			set fire to victim
			khkits_perk(attacker)
	mgStats(attacker, "kitpvp.selected_kit", "get", "", "") = "snail":
		chance of 30%:
			remove slowness from victim
			apply slowness 3 to victim for 5 seconds
			khkits_perk(attacker)
	mgStats(attacker, "kitpvp.selected_kit", "get", "", "") = "darkness":
		chance of 30%:
			remove blindness from victim
			apply blindness 10 to victim for 5 seconds
			khkits_perk(attacker)
sneak toggle:
	player is not sneaking
	mgStats(player, "kitpvp.selected_kit", "get", "", "") = "ninja":
		{ninja_v::%player%} is set
		khkits_delay(player, 15 seconds) is true:
			khkits_perk(player)
			teleport player to location of {ninja_v::%player%} parsed as player
			loop 60 times:
				{ninja_t::%player%} is 0:
					delete {ninja_v::%player%} and {ninja_t::%player%}
				else:
					remove 1 from {ninja_t::%player%}
					wait 1 second
	mgStats(player, "kitpvp.selected_kit", "get", "", "") = "invencible":
		khkits_delay(player, 20 seconds) is true:
			khkits_perk(player)
			set {skill::invencible_%player%} to true
			wait 4 seconds
			delete {skill::invencible_%player%}
	mgStats(player, "kitpvp.selected_kit", "get", "", "") = "sonic":
		khkits_delay(player, 60 seconds) is true:
			set {_p::*} to all players in radius 7 of player
			remove player from {_p::*}
			apply poison 2 to {_p::*} for 5 seconds
			apply speed 4 to player for 5 seconds
			khkits_perk(player)

# ─────────────────────────────────────────────────── #
# load
unload:
	delete {antitick}
load:
	set {antitick} to true
	loop "language" and "hotbar" and "locations" and "menus/shop_kits" and "menus/shop" and "menus/warps" and "kits":
		fileExists("plugins/KhKits/%loop-value%.yml") != true:
			create file "plugins/KhKits/%loop-value%.yml"
			delete file "plugins/KhKits/%loop-value%.yml"
			download from "https://raw.githubusercontent.com/KickHolse/KhKits/master/files/%loop-value%" to file "plugins/KhKits/%loop-value%.yml"
		yaml "ks.kits.%loop-value%" is loaded:
			unload yaml "ks.kits.%loop-value%"
		load yaml "plugins/KhKits/%loop-value%.yml" as "ks.kits.%loop-value%"
	set {score.title} to yaml value "scoreboard.title" from "ks.kits.language"
	set {_temp::*} to yaml list "scoreboard.lines" from "ks.kits.language"
	set {scoreline} to 0
	set {_empty} to 0
	delete {score.line::*}
	set {_line} to amount of {_temp::*}
	loop {_temp::*}:
		add 1 to {scoreline}
		"%loop-value%" is "":
			set {score.line::%{_line}%} to "§%{_empty}%"
			{_empty} < 9:
				add 1 to {_empty}
		else:
			set {score.line::%{_line}%} to colored loop-value
		remove 1 from {_line}
	text from "https://api.spigotmc.org/legacy/update.php?resource=67595" != "{@version}":
		send "[KhKits] &cYou are not using the latest version of skript." to console
